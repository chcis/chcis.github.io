(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{571:function(t,a,v){t.exports=v.p+"assets/img/1.bdfab67e.png"},572:function(t,a,v){t.exports=v.p+"assets/img/2.47399228.png"},635:function(t,a,v){"use strict";v.r(a);var _=v(19),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"分布式事务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[t._v("#")]),t._v(" 分布式事务")]),t._v(" "),_("h2",{attrs:{id:"什么是分布式系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式系统"}},[t._v("#")]),t._v(" 什么是分布式系统？")]),t._v(" "),_("blockquote",[_("p",[t._v("部署在不同结点上的系统通过网络交互来完成协同工作的系统。")])]),t._v(" "),_("p",[t._v("比如：充值加积分的业务，用户在充值系统向自己的账户充钱，在积分系统中自己积分相应的增加。充值系统和积\n分系统是两个不同的系统，一次充值加积分的业务就需要这两个系统协同工作来完成。")]),t._v(" "),_("h2",{attrs:{id:"什么是事务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是事务"}},[t._v("#")]),t._v(" 什么是事务？")]),t._v(" "),_("blockquote",[_("p",[t._v("事务是指由一组操作组成的一个工作单元，这个工作单元具有原子性（atomicity）、一致性（consistency）、隔\n离性（isolation）和持久性（durability）。")])]),t._v(" "),_("ul",[_("li",[t._v("原子性：执行单元中的操作要么全部执行成功，要么全部失败。如果有一部分成功一部分失败那么成功的操作要全\n部回滚到执行前的状态。")]),t._v(" "),_("li",[t._v("一致性：执行一次事务会使用数据从一个正确的状态转换到另一个正确的状态，执行前后\n数据都是完整的。")]),t._v(" "),_("li",[t._v("隔离性：在该事务执行的过程中，任何数据的改变只存在于该事务之中，对外界没有影响，事务\n与事务之间是完全的隔离的。只有事务提交后其它事务才可以查询到最新的数据。")]),t._v(" "),_("li",[t._v("持久性：事务完成后对数据的改变会永久性的存储起来，即使发生断电宕机数据依然在。")])]),t._v(" "),_("h2",{attrs:{id:"什么是本地事务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是本地事务"}},[t._v("#")]),t._v(" 什么是本地事务？")]),t._v(" "),_("p",[t._v("本地事务就是用关系数据库来控制事务，关系数据库通常都具有ACID特性，传统的单体应用通常会将数据全部存储\n在一个数据库中，会借助关系数据库来完成事务控制。")]),t._v(" "),_("h2",{attrs:{id:"什么是分布式事务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式事务"}},[t._v("#")]),t._v(" 什么是分布式事务？")]),t._v(" "),_("p",[t._v("在分布式系统中一次操作由多个系统协同完成，这种一次事务操作涉及多个系统通过网络协同完成的过程称为分布\n式事务。这里强调的是多个系统通过网络协同完成一个事务的过程，并不强调多个系统访问了不同的数据库，即使\n多个系统访问的是同一个数据库也是分布式事务，如下图：")]),t._v(" "),_("p",[_("img",{attrs:{src:v(571),alt:"图标"}})]),t._v(" "),_("p",[t._v("另外一种分布式事务的表现是，一个应用程序使用了多个数据源连接了不同的数据库，当一次事务需要操作多个数\n据源，此时也属于分布式事务，当系统作了数据库拆分后会出现此种情况。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(572),alt:"图标"}})]),t._v(" "),_("p",[t._v("上面两种分布式事务表现形式以第一种据多。")]),t._v(" "),_("h2",{attrs:{id:"分布式事务有哪些场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务有哪些场景"}},[t._v("#")]),t._v(" 分布式事务有哪些场景？")]),t._v(" "),_("blockquote",[_("p",[t._v("商系统中的下单扣库存")])]),t._v(" "),_("p",[t._v("电商系统中，订单系统和库存系统是两个系统，一次下单的操作由两个系统协同完成")]),t._v(" "),_("blockquote",[_("p",[t._v("金融系统中的银行卡充值")])]),t._v(" "),_("p",[t._v("在金融系统中通过银行卡向平台充值需要通过银行系统和金融系统协同完成。")]),t._v(" "),_("blockquote",[_("p",[t._v("教育系统中下单选课业务")])]),t._v(" "),_("p",[t._v("在线教育系统中，用户购买课程，下单支付成功后学生选课成功，此事务由订单系统和选课系统协同完成。")]),t._v(" "),_("blockquote",[_("p",[t._v("SNS系统的消息发送")])]),t._v(" "),_("p",[t._v("在社交系统中发送站内消息同时发送手机短信，一次消息发送由站内消息系统和手机通信系统协同完成。")])])}),[],!1,null,null,null);a.default=s.exports}}]);